security:
    encoders:
        App\Entity\User:
            algorithm: auto


#Pour créer le fichier SECURITY.YAML il faut utiliser la command line "bin/console make:user" qui crée une entitée User
#et définit différents "roles" d'user (admin, customer,...), on décide des accès des différents roles ici (ci-dessous)

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\UserAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: 'list_articles'

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # Ici j'indique que pour accéder à tous les paths commençant par "/admin" il faut avoir le role admin
        # /!\ il faut IMPÉRATIVEMENT faire matcher ce qu'on écrit ci-dessous dans "roles" avec ce qu'on écrit dans la bdd
        # + pour la partie role, la bdd attend un objet .json, la synthèxe est donc la suivante : ["ROLE_ADMIN"] (ne pas oublier les crochets+guillemets)
         - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
